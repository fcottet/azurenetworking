name: vnet-hub-spoke-multi-region

on:
  pull_request:
    branches:
      - main
    paths:
      - 'vnet-hub-spoke-multi-region/**'
  workflow_dispatch:

env:
  WORKDIR: "vnet-hub-spoke-multi-region"
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_USE_OIDC: true
  TFSTATE_STORAGE_ACCOUNT_NAME: ${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}
  TFSTATE_CONTAINER_NAME: ${{ secrets.TFSTATE_CONTAINER_NAME }}
  TFSTATE_KEY: "vnethubspokemultiregion.tfstate"
  TFSTATE_RESOURCE_GROUP_NAME: ${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}
  TFSTATE_STORAGE_ACCOUNT_KEY: ${{ secrets.TFSTATE_STORAGE_ACCOUNT_KEY }}

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  PlanApply:
    name: Plan and Apply
    runs-on: self-hosted
    environment: 'production'
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2
    
    - name: 'Terraform Init'
      id: init
      run: |
        terraform init \
        -backend-config="storage_account_name=${{ env.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
        -backend-config="container_name=${{ env.TFSTATE_CONTAINER_NAME }}" \
        -backend-config="key=${{ env.TFSTATE_KEY }}" \
        -backend-config="resource_group_name=${{ env.TFSTATE_RESOURCE_GROUP_NAME }}" \
        -backend-config="access_key=${{ env.TFSTATE_STORAGE_ACCOUNT_KEY }}"

    - name: 'Terraform Plan'
      id: plan
      run: terraform plan -out=main.tfplan
    
    - name: 'Terraform Show'
      id: show
      run: terraform show main.tfplan

    # - name: 'Terraform Apply'
    #   id: apply
    #   run: terraform apply -parallelism=30 main.tfplan

    - name: 'Terraform Destroy'
      id: destroy
      run: terraform destroy -auto-approve -parallelism=30

